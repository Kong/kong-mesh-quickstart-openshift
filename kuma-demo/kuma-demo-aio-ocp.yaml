apiVersion: v1
kind: Namespace
metadata:
  name: kuma-demo
  namespace: kuma-demo
  labels:
    kuma.io/sidecar-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-master
  namespace: kuma-demo
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: master
        image: kvn0218/postgres:latest
        env:
        - name: POSTGRES_USER
          value: kumademo
        - name: POSTGRES_PASSWORD
          value: kumademo
        - name: POSTGRES_DB
          value: kumademo
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
        ports:
        - containerPort: 5432
      volumes:
      - emptyDir: {}
        name: pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: kuma-demo
  labels:
    app: postgres
spec:
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: kuma-demo
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: kvn0218/kuma-redis
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kuma-demo
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: kuma-demo
  annotations:
    3001.service.kuma.io/protocol: "http"
spec:
  selector:
    app: kuma-demo-backend
  ports:
  - name: api
    port: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v0
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v0
      env: prod
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v0
        env: prod
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres_kuma-demo_svc_5432.mesh
        - name: POSTGRES_PORT_NUM
          value: "80"
        - name: SPECIAL_OFFER
          value: "false"
        - name: REDIS_HOST
          value: redis_kuma-demo_svc_6379.mesh
        - name: REDIS_PORT
          value: "80"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v1
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v1
      env: intg
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v1
        env: intg
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres_kuma-demo_svc_5432.mesh
        - name: POSTGRES_PORT_NUM
          value: "80"
        - name: REDIS_HOST
          value: redis_kuma-demo_svc_6379.mesh
        - name: REDIS_PORT
          value: "80"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v2
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v2
      env: dev
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v2
        env: dev
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:latest
        name: kuma-be
        env:
        - name: POSTGRES_HOST
          value: postgres_kuma-demo_svc_5432.mesh
        - name: POSTGRES_PORT_NUM
          value: "80"
        - name: TOTAL_OFFER
          value: "2"
        - name: REDIS_HOST
          value: redis_kuma-demo_svc_6379.mesh
        - name: REDIS_PORT
          value: "80"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: kuma-demo
  annotations:
    8080.service.kuma.io/protocol: "http"
    ingress.kubernetes.io/service-upstream: "true"
spec:
  selector:
    app: kuma-demo-frontend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-app
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-frontend
      version: v8
      env: prod
  template:
    metadata:
      labels:
        app: kuma-demo-frontend
        version: v8
        env: prod
    spec:
      containers:
      - name: kuma-fe
        image: kvn0218/kuma-demo-fe:latest
        args: ["-P", "http://backend_kuma-demo_svc_3001.mesh"]
        imagePullPolicy: IfNotPresent
